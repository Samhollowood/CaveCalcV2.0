EventAnalyser Mode Help 

Do not hesitate to contact samuel.hollowood@bnc.ox.ac.uk for any questions, debugging or guidance.

##########################################################################################
General
1.1 How do I use the EventAnalyser?
1.2 What are the tolerance levels? What levels should I use?
1.3 What proxies can I include in the EventAnalyser?
1.4 Why can’t the EventAnalyser read my data?
1.5 How do I know when there is match?
1.6 Why am I getting no matches? 
1.7 Where can I find the results of the EventAnalyser?
1.8 I have finished my first set of model runs, but want to investigate with another run?

Plotting
2.1 How do I plot the data?
2.2 How am I able to interpret the plotted data?
2.3 How can I run the summary text file, and what does it tell me?

Utility 
3.1 What part of my time-series should I use the EventAnalyser with?
3.2 How can I add investigate variables that are not in the default mode?

##########################################################################################


1.1 How do I use the EventAnalyser?
The EventAnalyser may be run via the GUI or python API. On the GUI, the variables associated with the EventAnalyser are found around the black box, under EventAnalyser mode. 

On the GUI, to activate the EventAnalyser during model runs, the user has to simply browse to the excel file in which their proxy data is stored, under the variable `A file with proxy data'. 
Tolerance levels may be left untouched. When the user clicks Run!, and CaveCalcv2.0 can find the file, the EventAnalyser mode is now initialised. 

On the python API, the EventAnalyser can be run using the example from run_models_with_EventAnalyser.py. Non-default settings may be changed in the variable s = {} which is found directly after importing the necessary modules. Users will have to add the path to the excel file under `user_filepath' in a string format. When running this script, the EventAnalyser mode is now initialised. 

1.2 What are the tolerance levels? What levels should I use?
The tolerance levels are the plus/minus (±) values from the measured data in which proxy model outputs will be accepted. For example, a measured d13C = -4‰ and a defined d13C tolerance of 0.5 will result in all CaveCalcv2.0 runs simulating stalagmite values between -4.5‰ to -3.5‰ being accepted.

The decision of the tolerance levels is up to the user, but statistical methods such as the standard deviation, variance, and upper and lower confidence levels are all recommended.

1.3 What proxies can I include in the EventAnalyser?
Up to all 8 proxies CaveCalcv2.0 simulate can be included in the users file. There is flexibility in the amount. For example, the user may run the EventAnaylser with just d13C data in a time-series. The user may also run the EventAnalyser with d13C, Mg/Ca and Sr/Ca data in a time-series. It really depends on the amount of proxies that have been measured and the user wants to investigate with.

1.4 Why can’t the EventAnalyser read my data?
The likelihood is that CaveCalcv2.0 is unable to read the columns within the dataset. CaveCalcv2.0 is designed to read the proxy variable under multiple (but not all) different definitions. For example, the Mg/Ca proxy data may be defined in a column as `mgca, MgCa, Mg/Ca, or even Mg/Ca (mmol/mol)’. The EventAnalyser reads the column headings, converts them to lowercase and applies a substring search.

If the EventAnalyser mode cannot read the proxy data then please contact samuel.hollowood@bnc.ox.ac.uk for a diagnosis 

1.5 How do I know when there is a match?
The completion of models are shown on the terminal. If there is a match between the model output and the measured data, the EventAnalyser will display a ‘Match! Results appended to EventAnalyser.xlsx’. Note the first match in the model will print “Match! Created new file EventAnalyser.xlsx and saved results." This is because it creates the EventAnalyser.xlsx file which will subsequently be appended upon further matches. If an EventAnalyser.xlsx file already exists in the directory the models are ran in, then it will append to that file. 

1.6 Why am I getting no matches?
Common causes of obtaining no matches are (i) the tolerance levels are too small, (ii) the current set of input parameters do not result in carbonate precipitation, or (iii) the input parameters to do not represent the users cave system.

For example, there would be no matches with trace metals or d44Ca if the bedrock value is not defined. This is because the default bedrock value is 0. Therefore we encourage users to use their own bedrock measurements, or since not many bedrock values are available, to estimate their bedrock value.
I
f the user has Mg/Ca data but no bedrock measurements, they may assume the bedrock value is the minimum Mg/Ca. Or they may apply a scaling factor B (from 0.5 to 1):
Mg/Ca_bedrock = B*Mg/Ca_min

The minimum Mg/Ca is used since D(Mg) << 1.  So users should note that if investigating U/Ca for aragonite, then the U/Ca_bedrock should be the U/Ca_max (since D(U) >> 1).

1.7 How can I find the results of the EVentAnalyser?
The results will stored in a created EventAnalyser.xlsx file within the directory the model is ran inn

1.8 I have a finished my first set of model runs, but want to continually investigate with another run?
The user may archive the first EventAnalyser.xlsx from a first set of model runs, but there is no requirement too. If the user wants to continually investigate under a different set of input parameters, they may run this model, and the matches will be automatically appended to the previous EventAnalyser.xlsx. 
